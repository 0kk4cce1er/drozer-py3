from mwr.common import cli

from drozer.exploit import builder

class ExploitManager(cli.Base):
    """
    drozer exploit COMMAND [OPTIONS]
    
    A utility for crafting exploits to deliver drozer onto an Android device.
    """
    
    def __init__(self):
        cli.Base.__init__(self)
    
    def args_for_build(self):
        self._parser.add_argument("exploit", help="specify the exploit module to use")
        self._parser.add_argument("shellcode", help="specify the shellcode module to use")
        self._parser.add_argument("payload", help="the payload to use")
        self._parser.add_argument("--server", default=None, metavar="HOST[:PORT]", help="specify the address and port of the drozer server")
        
        # exploit => webkit bug
        # shellcode => random downloader
        # payload => weasel
        
    def do_build(self, arguments):
        """build an exploit"""
        
        print builder.Builder().build(arguments.exploit, arguments)

    def args_for_info(self):
        self._parser.add_argument("module", help="specify the exploit module to use")
        
    def do_info(self, arguments):
        """prints information about an exploit module"""
        
        module = builder.Builder().module(arguments.module)
        
        print module.usage.formatted_description()
        
    def do_list(self, arguments):
        """list the available exploit modules"""
        
        print builder.Builder().modules()
        