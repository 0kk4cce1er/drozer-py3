from drozer.payload import builder, manifest
from drozer.server import uploader

class Exploit(object):
    
    def build_agent(self, arguments):
        source = arguments.no_gui and "guiless-agent" or "gui-agent"
        
        packager = builder.Packager()
        packager.copy_sources_from(source)
        
        if arguments.no_gui:
            e = manifest.Endpoint(packager.endpoint_path())
            if arguments.server != None:
                e.put_server(arguments.server)
            e.write()
        
        if arguments.permission != None:
            m = manifest.Manifest(packager.manifest_path())
            for p in arguments.permission:
                m.add_permission(p)
            m.write()
        
        return packager.package()
    
    def execute(self, arguments):
        
        if not arguments.shellcode in self.payloads:
            self.stderr.write("unsupported shellcode: " + arguments.shellcode + "\n")
            return
        
        self.generate(arguments)
    
    def parse_server(self, server_string):
        if server_string == None:
            return ("10.0.2.2", 31415)
        elif server_string.find(":") == -1:
            return (server_string, 31415)
        else:
            (host, port) = server_string.split(":", 1)
            
            return (host, int(port))

    def upload(self, arguments, resource, data, magic=None):
        if uploader.upload(arguments, resource, data, magic=magic):
            print " [  OK  ]"
            
            return True
        else:
            print " [ FAIL ]"
            
            return False
        